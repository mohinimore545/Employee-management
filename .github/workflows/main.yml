name: CI-CD Build Push Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.ECR_BACKEND }}:latest

    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        build-args: |
          REACT_APP_API_URL=${{ secrets.BACKEND_URL }}
        tags: ${{ secrets.ECR_FRONTEND }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - uses: actions/checkout@v4

    - uses: webfactory/ssh-agent@v0.6.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Replace image references
      run: |
        sed -i "s|REPLACE_WITH_BACKEND_IMAGE|${{ secrets.ECR_BACKEND }}:latest|g" k8s/backend-deployment.yaml
        sed -i "s|REPLACE_WITH_FRONTEND_IMAGE|${{ secrets.ECR_FRONTEND }}:latest|g" k8s/frontend-deployment.yaml
        tar czf k8s.tar.gz k8s

    - uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.K3S_HOST }}
        username: ubuntu
        port: 22
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: k8s.tar.gz
        target: /home/ubuntu/

    - uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.K3S_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          tar xzf k8s.tar.gz
          echo "Creating namespace if it doesnâ€™t exist..."
          sudo kubectl get ns employee-app || sudo kubectl create ns employee-app
        
          echo "Waiting a few seconds for namespace to be ready..."
          sleep 5

          echo "Applying all manifests..."
          sudo kubectl apply -f k8s/

          echo "Deployment complete!"
          sudo kubectl get pods -n employee-app
